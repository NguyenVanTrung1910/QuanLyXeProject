
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="page-body">
    <style>
        .table-responsive {
            overflow: visible;
        }
    </style>

    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-6">
                    <h4>Quản trị {điền chức năng vào đây}</h4>
                </div>
                <div class="col-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="index.html">
                                <svg class="stroke-icon">
                                    <use href="/svg/icon-sprite.svg#stroke-home"></use>
                                </svg>
                            </a>
                        </li>
                        <li class="breadcrumb-item">{Điền menu bố}</li>
                        <li class="breadcrumb-item active">{Điền tên menu}</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card" id="search-zone">
                    <div class="card-header">
                        <div class="row mb-2">

                            <div class="col-md-3  mb-2">
                                <label class="form-label" for="validationTooltip01">Nhập từ khóa...</label>
                                <input id="searchInput@Entity@" type="text" class="form-control flex-grow-1 " autocomplete="none">
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-md-12 text-center">
                                <button class="btn btn-primary" id="search-btn">Tìm kiếm</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card">
                    <div class="card-header py-3 card-no-border">
                        <div class="row">
                            <div class="col-md-12 text-end">
                                <button id="addNew@Entity@" type="button" data-permission="">
                                    Thêm mới
                                </button>   
                            </div>

                        </div>



                    </div>
                    <div class="card-body pt-0">
                        <div class="table-responsive custom-scrollbar">
                            <table class="display" id="data-@Entity@-4" style="width:100%">
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>





    <script>
        function xem@Entity@(Id) {
            openModalWithApi("/@ViewBag.AppName/@Entity@/View/" + Id, "lg", "Xem chi tiết");
        };
        function sua@Entity@(Id,moderationStatus) {
            if (moderationStatus == 0) {
                showNotification("warrning", "Cần hủy duyệt trước khi sửa");
                return;
            }
            ChuyenHuong("external", "/@ViewBag.AppName/@Entity@/Edit/" + Id);
        };

        function duyet@Entity@(Id) {
            toggleButtonContainerLoading(Id);
            $.ajax({
                url: '/@ViewBag.AppName/@Entity@/Approved/' + Id,
                method: 'GET',
                dataType: 'json',
                success: function (data) {
                    showNotification("success", "Duyệt thành công");
                    toggleButtonContainerLoading(Id);
                    $('#search-btn').click();
                },
                error: function (xhr, status, error) {
                    showNotification("danger", 'Đã có lỗi xảy ra:', error);
                    toggleButtonContainerLoading(Id);
                }
            });
        };
        function huyDuyet@Entity@(Id) {
            toggleButtonContainerLoading(Id);
            $.ajax({
                url: '/@ViewBag.AppName/@Entity@/Disapproval/' + Id,
                method: 'GET',
                dataType: 'json',
                success: function (data) {
                    toggleButtonContainerLoading(Id);
                    showNotification("success", "Hủy duyệt thành công")

                    $('#search-btn').click();
                },
                error: function (xhr, status, error) {
                    toggleButtonContainerLoading(Id);
                    showNotification("danger", 'Đã có lỗi xảy ra:', error);
                }
            });
        };
        function xoa@Entity@(Id,moderationStatus) {
            if (moderationStatus == 0) {
                showNotification("warrning", "Cần hủy duyệt trước khi xóa");
                return;
            }
            toggleButtonContainerLoading(Id);
            showNotificationWithConfirm(
                "",
                function () {
                    $.ajax({
                        url: '/@ViewBag.AppName/@Entity@/Delete/' + Id,
                        method: 'GET',
                        dataType: 'json',
                        success: function (data) {
                            toggleButtonContainerLoading(Id);
                            showNotification("warrning", "Xóa thành công")
                            $('#search-btn').click();
                        },
                        error: function (xhr, status, error) {
                            console.log(error)
                            showNotification("danger", 'Đã có lỗi xảy ra:' + xhr?.responseJSON?.ex_message);
                            toggleButtonContainerLoading(Id);
                        }
                    });
                },
                function () {
                    toggleButtonContainerLoading(Id);
                });

        };
        $(document).ready(function () {
            var dataGridInstance = $('#data-@Entity@-4').registerGrid({
                columns: [
                    @columnsTemplate@
                ],
                length: 20,
                endpoint: "/@ViewBag.AppName/@Entity@/GetPaged",
                prepareRequest: function (d) {
                    d.SearchIn = ["Title"];
                    d.Keyword = $('#searchInput@Entity@').val();
                    var t_gridRequest = {
                        "skip": d.start,
                        "page": (d.start / d.length) + 1,
                        "pageSize": d.length
                    };
                    d.t_gridRequest = JSON.stringify(t_gridRequest);
                    return d;
                },
                dataBound: function () {
                    // $('.dataTables_processing').hide();
                    // console.log("load xong dữ liệu")

                },

            });


            $('#search-btn').registerButton({
                type: 'primary ',
                icon: "fa fa-search",
                clickHandler: function () {
                    return new Promise(function (resolve) {
                        var grid = dataGridInstance;
                        grid.page(0);//chuyển về trang đầu
                        grid.ajax.reload(null, false);
                        resolve();//cờ xác định kết thúc
                    });
                }
            });

            $("#searchInput@Entity@").enterKey(function () {
                var button = $('#search-btn');
                if (!button.hasClass("loading"))
                    $('#search-btn').click();
            });
            $('#addNew@Entity@').registerButton({
                type: 'primary',
                icon: "fa fa-plus",
                clickHandler: function () {
                    return new Promise(function (resolve) {
                        ChuyenHuong("external", "/@ViewBag.AppName/@Entity@/Edit/" + 0)
                        resolve();//cờ xác định kết thúc
                    });
                }
            });
        });

    </script>
</div>



