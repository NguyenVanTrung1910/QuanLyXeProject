using Application.Interfaces;
using Domain.Entities;
using Domain.IRepositories.SqlServer;
using Domain.Models;
using Domain.Querys;
using Domain.Querys.Base;

namespace Application.Services
{
    public class @EntityRaw@Service : I@EntityRaw@Service
    {
        private I@EntityRaw@Repository _@EntityRaw@Repository;
        private readonly ResponeActionResult _responeActionResult;
        public int TotalRecord = 0;

        public @EntityRaw@Service(ResponeActionResult responeActionResult,I@EntityRaw@Repository @EntityRaw@Repository) 
        {
            _@EntityRaw@Repository = @EntityRaw@Repository;
            _responeActionResult = responeActionResult;
        }

        public @EntityRaw@ GetById(int id)
        {
            return _@EntityRaw@Repository.GetById(id);
        }
        public ResponeActionResult ApprovedItem(int id)
        {
            _@EntityRaw@Repository.ApprovedItem(id);
            _responeActionResult.ex_message = "Duyệt thành công";
            return _responeActionResult;
        }
        public ResponeActionResult DisapprovedItem(int id)
        {
            _@EntityRaw@Repository.DisapprovedItem(id);
            _responeActionResult.ex_message = "Hủy duyệt thành công";
            return _responeActionResult;
        }


        public ResponeActionResult GetPaged(@EntityRaw@Query searchQuery)
        {
           
            List<@EntityRaw@_Entity> listTaiLieuThucTap = _@EntityRaw@Repository.GetPaged(searchQuery);
            if (listTaiLieuThucTap == null)
            {
                _responeActionResult.Message($"Không tìm thấy bản ghi");
                return _responeActionResult;
            }
            _responeActionResult.data = listTaiLieuThucTap;
            _responeActionResult.draw = searchQuery.draw;
            _responeActionResult.recordsTotal = _@EntityRaw@Repository.TotalRecord;
            _responeActionResult.recordsFiltered = _@EntityRaw@Repository.TotalRecord;
            return _responeActionResult;
        }

        public ResponeActionResult Insert(@EntityRaw@ item)
        {
            item.FillDataForInsert(item.CurrentUserId);
            _@EntityRaw@Repository.Insert(item);
            _responeActionResult.ex_message = "Thêm thành công";
            _responeActionResult.data = new @EntityRaw@() { Id = item.Id };
            return _responeActionResult;
        }


        public ResponeActionResult Delete(int id)
        {
            _@EntityRaw@Repository.DeleteById(id);
            _responeActionResult.ex_message = "Xóa thành công";
            return _responeActionResult;
        }

        public ResponeActionResult Update(@EntityRaw@ item)
        {
            item.FillDataForUpdate(item.CurrentUserId);
            _@EntityRaw@Repository.Update(item);
            _responeActionResult.ex_message = "Sửa thành công";
            _responeActionResult.data = new @EntityRaw@() { Id = item.Id };
            return _responeActionResult;
        }
        public @EntityRaw@_Entity GetEntity(int Id)
        {
            return _@EntityRaw@Repository.GetEntity(Id);
        }



    }
}
